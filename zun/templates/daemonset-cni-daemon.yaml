{{/*
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- if .Values.manifests.daemonset_cni_daemon }}
{{- $envAll := . }}

{{- $mounts_zun_cni_daemon := .Values.pod.mounts.zun_cni_daemon.zun_cni_daemon }}
{{- $mounts_zun_cni_daemon_init := .Values.pod.mounts.zun_cni_daemon.init_container }}

{{- $serviceAccountName := "zun-cni-daemon" }}
{{ tuple $envAll "cni_daemon" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: zun-cni-daemon
  annotations:
    {{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" }}
  labels:
{{ tuple $envAll "zun" "cni-daemon" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
spec:
  selector:
    matchLabels:
{{ tuple $envAll "zun" "cni-daemon" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
{{ tuple $envAll "cni_daemon" | include "helm-toolkit.snippets.kubernetes_upgrades_daemonset" | indent 2 }}
  template:
    metadata:
      labels:
{{ tuple $envAll "zun" "cni-daemon" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 8 }}
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
{{ tuple "zun_cni_daemon" . | include "helm-toolkit.snippets.custom_pod_annotations" | indent 8 }}
    spec:
{{ tuple "zun_cni_daemon" . | include "helm-toolkit.snippets.kubernetes_pod_priority_class" | indent 6 }}
{{ tuple "zun_cni_daemon" . | include "helm-toolkit.snippets.kubernetes_pod_runtime_class" | indent 6 }}
      serviceAccountName: {{ $serviceAccountName }}
      nodeSelector:
        {{ .Values.labels.cni_daemon.node_selector_key }}: {{ .Values.labels.cni_daemon.node_selector_value }}
{{ if $envAll.Values.pod.tolerations.zun.enabled }}
{{ tuple $envAll "zun" | include "helm-toolkit.snippets.kubernetes_tolerations" | indent 6 }}
{{ end }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.cni_daemon.timeout | default "60" }}
      initContainers:
{{ tuple $envAll "cni_daemon" $mounts_zun_cni_daemon_init | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
      containers:
        - name: zun-cni-daemon
{{ tuple $envAll "zun_cni_daemon" | include "helm-toolkit.snippets.image" | indent 10 }}
{{ tuple $envAll $envAll.Values.pod.resources.cni_daemon | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
          securityContext:
            privileged: true
            runAsUser: 0
            readOnlyRootFilesystem: false
          env:
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          command:
            - /tmp/zun-cni-daemon.sh
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: zun-bin
              mountPath: /tmp/zun-cni-daemon.sh
              subPath: zun-cni-daemon.sh
              readOnly: true
            - name: zun-etc
              mountPath: /etc/zun/zun.conf
              subPath: zun.conf
              readOnly: true
            {{- if .Values.conf.zun.DEFAULT.log_config_append }}
            - name: zun-etc
              mountPath: {{ .Values.conf.zun.DEFAULT.log_config_append }}
              subPath: {{ base .Values.conf.zun.DEFAULT.log_config_append }}
              readOnly: true
            {{- end }}
            - name: zun-etc
              mountPath: /etc/zun/policy.yaml
              subPath: policy.yaml
              readOnly: true
            - name: host-var-lib-zun
              mountPath: /var/lib/zun
            - name: host-var-log
              mountPath: /var/log
            - name: host-netns
              mountPath: /var/run/netns
              mountPropagation: Bidirectional
{{ if $mounts_zun_cni_daemon.volumeMounts }}{{ toYaml $mounts_zun_cni_daemon.volumeMounts | indent 12 }}{{ end }}
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: zun-bin
          configMap:
            name: zun-bin
            defaultMode: 0555
        - name: zun-etc
          secret:
            secretName: zun-etc
            defaultMode: 0444
        - name: host-var-lib-zun
          hostPath:
            path: /var/lib/zun
            type: DirectoryOrCreate
        - name: host-var-log
          hostPath:
            path: /var/log
        - name: host-netns
          hostPath:
            path: /var/run/netns
            type: DirectoryOrCreate
{{ if $mounts_zun_cni_daemon.volumes }}{{ toYaml $mounts_zun_cni_daemon.volumes | indent 8 }}{{ end }}
{{- end }}